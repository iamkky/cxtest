#include <stddef.h>
#include <stdlib.h>
#include <string.h>

#include <abd/printf.h>
#include <abd/errLogf.h>
#include <abd/string.h>

#include <abd/new.h>
#include <abd/StringBuffer.h>

#include <awtk/api.h>
#include <awtk/HComponent.h>
#include "Calc.x.h"
#include "HTab.x.h"
#include "JsonTable.x.h"

//HEADERX(App, _HTE_APP_H_)

Class(App){
	HComponent_st hcomponent;
	HComponent htab0;
};

Constructor(App);
Destructor(App);
HtElement appRender(HComponent component);

//ENDX

Constructor(App)
{
HComponent calc1;
HComponent calc2;
HComponent table1;
HComponent table2;

const char	*fields[7] = {
			"id",
			"name",
			"email",
			"about",
			"token",
			"profilePicture",
			"liveLocation"
		};
const char	*sortBy[7] = {
		"+name",
		NULL
		};

	self->hcomponent.render = appRender;

	self->htab0 = (HComponent)CNew(HTab);

	calc1 = (HComponent)CNew(Calc);
	calc2 = (HComponent)CNew(Calc);

	table1 = (HComponent)CNew(JsonTable, "json/MOCK_DATA.json", 7, fields, sortBy);
	table2 = (HComponent)CNew(JsonTable, "json/MOCK_DATA.json", 7, fields, sortBy);

	self->htab0->add(self->htab0, calc1);
	self->htab0->add(self->htab0, calc2);
	self->htab0->add(self->htab0, table1);
	self->htab0->add(self->htab0, table2);

	return self;
}

Destructor(App)
{
	free(self);
}

HtElement appRender(HComponent component)
{
App self = (App)component;

	return htDiv("app",
		htAttributeNew("id","app"),  // id="app" is mandatory
		self->htab0->render(self->htab0)
	);
}

